## Customize the test machine
machine:
  # Add some environment variables
  environment:
    CONDA_ROOT: /home/ubuntu/miniconda
    TEST_ENV_NAME: test-env
    TEST_ENV_PREFIX: /home/ubuntu/miniconda/envs/test-env
    LD_LIBRARY_PATH: /home/ubuntu/miniconda/envs/test-env/lib
    PYTHONPATH: /home/ubuntu/NeuroProof/build/python
    PATH: ${TEST_ENV_PREFIX}/bin:${CONDA_ROOT}/bin:${PATH}

## Customize dependencies
dependencies:
  cache_directories:
    - /home/ubuntu/miniconda
    
  override:
    # System libraries
    - sudo apt-get update
    - sudo apt-get install libgl1-mesa-dev
    
    # This is ugly... we should figure out which library needs this and fix it.
    - sudo ln -s /usr/lib/x86_64-linux-gnu /usr/lib64
    
    # Download/install conda (if not already cached)
    - >
      if [[ ! -d ${CONDA_ROOT} ]]; then
          echo "Installing Miniconda...";
          wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh &&
          bash Miniconda3-latest-Linux-x86_64.sh -b -p ${CONDA_ROOT};
      else
          echo "Using cached Miniconda install";
      fi

    - conda config --add channels conda-forge
    - conda config --add channels flyem-forge

    - conda install --quiet -y anaconda-client
    
    # Install neuroproof and all dependencies
    - >
      if [ ! -d ${TEST_ENV_PREFIX} ]; then
          conda create --quiet -y -n ${TEST_ENV_NAME} neuroproof python=3 h5py;
      else
          conda install --quiet -y -n ${TEST_ENV_NAME} neuroproof python=3 h5py;
      fi

    # Remove neuroproof itself
    - conda remove -y -n ${TEST_ENV_NAME} neuroproof

## Customize test commands
test:
  override:
    - echo "insecure" >> /home/ubuntu/.curlrc
    - ./configure-for-conda.sh ${TEST_ENV_PREFIX}
    - cd build && make && cd -
    - cd build && make install && cd -
    - cd build && make test && cd -
    - cat build/Testing/Temporary/LastTest.log
